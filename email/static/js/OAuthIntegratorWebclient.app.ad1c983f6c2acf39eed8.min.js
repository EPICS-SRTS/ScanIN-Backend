webpackJsonp([16],{382:function(e,t,r){"use strict";e.exports=function(e){var t=r(2),o=r(1),s=r(44),n=r(194),i=r(190),u=r(182),a=r(383),c=u.getUserRole()===Enums.UserRole.NormalUser,l=u.getUserRole()===Enums.UserRole.Anonymous;return a.init(e),l?{start:function(e){a.oauthServices=s.observableArray([]);var t=function(){var e=n.getCurrentHashArray();return e.length>=2&&e[0]===a.RegisterModuleHash?e[1]:""},r=function(e){if("CLoginView"===e.Name||"CRegisterView"===e.Name){t();e.View.externalAuthClick=function(t){o.cookie("oauth-redirect","CLoginView"===e.Name?"login":"register"),o.cookie("oauth-scopes","auth"),window.location.href="?oauth="+t},e.View.oauthServices=a.oauthServices}};i.send(a.ServerModuleName,"GetServices",null,function(e){a.oauthServices(e.Result)},this),u.subscribeEvent("StandardLoginFormWebclient::ConstructView::after",r),u.subscribeEvent("StandardRegisterFormWebclient::ConstructView::after",r)}}:c?{start:function(e){var r=function(){i.send(a.ServerModuleName,"GetAccounts",null,function(e){var r=0;t.isArray(e.Result)&&t.each(e.Result,function(e){e.Scopes.indexOf("auth")!==-1&&r++}),a.userAccountsCount(r)})};u.subscribeEvent("OAuthAccountChange::after",function(){r()}),r()},getCreateLoginPasswordView:function(){return r(384)}}:null}},383:function(e,t,r){"use strict";var o=r(2),s=r(44),n=r(181),i=r(182);e.exports={ServerModuleName:"OAuthIntegratorWebclient",HashModuleName:"oauth-integrator",AuthModuleName:"StandardAuth",OnlyPasswordForAccountCreate:!0,userAccountsCount:s.observable(0),Services:[],init:function(e){var t=e.OAuthIntegratorWebclient;o.isEmpty(t)||(this.AuthModuleName=n.pString(t.AuthModuleName,this.AuthModuleName),this.OnlyPasswordForAccountCreate=n.pBool(t.OnlyPasswordForAccountCreate,this.OnlyPasswordForAccountCreate),this.Services=n.pArray(t.Services,this.Services)),i.registerUserAccountsCount(this.userAccountsCount)},updateAdmin:function(e){o.each(this.Services,function(t){var r=e[t.Name];r&&(t.EnableModule=r.EnableModule,t.Id=r.Id,t.Secret=r.Secret)})}}},384:function(e,t,r){"use strict";function o(){this.visible=n.computed(function(){return l.OnlyPasswordForAccountCreate&&!u.isNonEmptyString(c.firstAccountWithPassLogin())}),this.password=n.observable(""),this.passwordFocus=n.observable(!1),this.confirmPassword=n.observable(""),this.confirmPasswordFocus=n.observable(!1),this.login=n.computed(function(){return c.getUserPublicId()},this)}var s=r(1),n=r(44),i=r(184),u=r(181),a=r(187),c=r(182),l=r(383);o.prototype.ViewTemplate="OAuthIntegratorWebclient_CreateLoginPasswordView",o.prototype.setPassword=function(){var e=s.trim(this.login()),t=s.trim(this.password()),r=s.trim(this.confirmPassword());return""===t?void this.passwordFocus(!0):t!==r?(a.showError(i.i18n("COREWEBCLIENT/ERROR_PASSWORDS_DO_NOT_MATCH")),void this.confirmPasswordFocus(!0)):void c.broadcastEvent(l.AuthModuleName+"::CreateUserAuthAccount",{Login:e,Password:t})},e.exports=new o}});